name: fe

on:
  push:
    branches:
      - main
      - master
  pull_request_target:

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    permissions:
      pull-requests: write

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup node env
        uses: actions/setup-node@v3.5.0
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
      
      # 自动同意 dependabot 的 pr
      - name: Auto approve
        uses: hmarr/auto-approve-action@v2
        if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'
        with:
          github-token: ${{ secrets.PAT }}

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: cd fe && yarn

      - name: Build
        run: cd fe && yarn build

      # 只有不是 bot 触发的构建时才进行部署
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
        with:
          github_token: ${{ secrets.PAT }}
          publish_dir: fe/dist
          publish_branch: pages  # deploying branch
